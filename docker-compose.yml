services:
  postgres:
    image: postgres:17.0-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U $$POSTGRES_USER"]
      interval: 2s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:8.0-M02-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  server:
    build: .
    command: npm run start
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./
          target: /src
        - action: rebuild
          path: ./package.json

volumes:
  pg_data:
  redis_data:
